class HomeController < ApplicationController
  def index
  end
  
  def soovita  
    inser = (params[:inserted])
    ident = (params[:ident])
    soo= (inser.concat("%"))
    
    @soovitus = Atc.where("code like ?", soo).first(20) if ident=="atcs"
    @soovitus = Atc.where("nimetus_est like ?", soo).first(20) if ident=="est"
    @soovitus = Atc.where("nimetus_eng like ?", soo).first(20) if ident=="eng"
  
    render :partial => 'soovita', :content_type => 'text/html'
  end    

  def kuva
     @atc = params[:atc] 
     
     if pole_olemas?
       render :text => @atc + ": sellist toimeainet ei ole!"
     else
       #url, millele tuleb lisada atc
       @baseurl = "http://193.40.10.165/register/register.php?otsi=J&keel=est&atc="
       #url, millega kysitakse pdf-e ravimiameti veebilehelt
       @queryurl = @baseurl + @atc
       #veebist ja pdf-ist lugemise requirements:
       veebistlugemise_requirements 
       #selle toimeaine kohta k2ivad read andmebaasist
       @toimeaine_info = Omadused.where("atc = ?", @atc)
       
       if @toimeaine_info.empty?
         #kui andmebaasis ei ole, siis vota pdf-st ja salvesta ka baasi
         lisa_uus_omadus
       else
         #kui andmebaasis on, siis peab v6rdlema
         ################
         #render :text => "andmebaasis ei ole"
         vordle_db_tabeli_kuupaevaga
         #render :partial => 'kuva', :content_type => 'text/html'
       end
       
     end
  end     
 
  
  def vordle_db_tabeli_kuupaevaga
      #kui andmebaasi tabelivastus ei ole tühi, on vaja v6rrelda kuupaevi
      #kuupaev andmebaasi tabelist
      #tabelirea id ja kuupaev
      #võrdlemiseks on vaja *toimeaine atc koodi, *toimeaine nimetust, *ravimpreparaadi nimetust, *spc linki
      anna_pdf_info_veebist#siin tekib massiiv @pdf_arr_vordlemiseks, kus on veebist leitud padf-ide hashid(key=pealk, value=sisu)
      #v6rdle @pdf_arr_vordlemiseks ja @toimeaine_info (andmebaasist)
      #kui veebi-tulemus on tyhi
      if anna_pdf_info_veebist.empty?
        render :text => "Palun täpsusta otaingut!"
      end
      
  end
  
  #lisa omaduste tabelisse uued andmed
  def lisa_uus_omadus    
    anna_urli_tabeli_read#siin tekib @finalrows ehk url-ist leitud tabeliread(toimeaine, atc ja spc link)
    @finalrows.each do |rowhash|
      pedef = ReadPdf.new (rowhash)
      pedef.read_pdf_in
      pedef.hashimine
      Omadused.create(pedef.hash_array)
    end 
  end
  
  def anna_pdf_info_veebist
    @pdf_arr_vordlemiseks = []
    anna_urli_tabeli_read#siin tekib @finalrows ehk url-ist leitud tabeliread(toimeaine, atc ja spc link)
    @finalrows.each do |rowhash|
      pedef = ReadPdf.new (rowhash)
      pedef.read_pdf_in
      pedef.hashimine
      @pdf_arr_vordlemiseks.push pedef.hash_array #iga pdf kohta tekib hash(pealkiri => sisu)
    end 
  end
  
  def veebistlugemise_requirements
    require 'getTable.rb'
    require 'readPdf.rb'  
  end
  
  def anna_urli_tabeli_read
    gl = GetTable.new (@queryurl)
    gl.get_table  
    #iga tabelirea kohta tekib yks pdf dokument;
    # igast pdf dokumendist tekib massiiv, mille elemendid on 
    # hash-id, kus v6ti on pealkiri ja vaartus on pealkirja-alune sisu
    @finalrows=gl.finalrows
  end
  
  #kas selline atc kood eksisteerib?
  def pole_olemas?
    olu = Atc.where("code = ?", @atc).first
    @atc.empty? || olu.nil?
  end
  
end
